{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uC,aCexDC,IAAAA,aAAAA,IAAqB,iCAAiC,YAIrDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAyB,QAAQ,SAAUC,EAAGC,GAClDC,KAAKC,aAAc,CACtB,KAIAL,EAAAA,EAAAA,QAAOM,IAAAA,UAAwB,eAAe,SAAUC,GACvDA,EAAMC,IACL,qBACAC,EAAA,OACCC,UAAS,+BAAgCX,IAAAA,SAAAA,YAA2B,GAAK,YAE1E,GAEF,IAKAY,IAAAA,UAAAA,cAA6C,SAAUC,GAEhDA,aAAaC,aAKnBT,KAAKU,SAAST,aAAeD,KAAKU,SAAST,YAGvCD,KAAKU,SAAST,aAEjBU,IAAIC,cAAcC,QACjBb,KAAKU,SAASI,OAAOC,UACrBf,KAAKgB,EAAE,qBAAqB,IAG/B,GAIApB,EAAAA,EAAAA,QAAOM,IAAAA,UAAwB,YAAY,WAC1CF,KAAKiB,wBAA0BC,aAAY,WAC1C,GAAIvB,IAAAA,SAAAA,YAA0B,CAC7B,IAAMwB,EAAYnB,KAAKgB,EAAE,wBACrBG,EAAUC,UACbpB,KAAKgB,EAAE,qBAAqBK,IAAI,CAC/BC,MAAOH,EAAUG,QACjBC,OAAQJ,EAAUI,SAAW,GAC7BC,IAAKL,EAAUC,SAASI,IAAMR,EAAE,aAAaI,SAASI,IACtDC,KAAMN,EAAUC,SAASK,KAAOT,EAAE,aAAaI,SAASK,MAG3D,CACD,GAAG,IACJ,KAEC7B,EAAAA,EAAAA,QAAOM,IAAAA,UAAwB,YAAY,WACzCwB,cAAc1B,KAAKiB,wBACrB,GACF,G","sources":["webpack://@zerosonesfun/composer-preview/webpack/bootstrap","webpack://@zerosonesfun/composer-preview/webpack/runtime/compat get default export","webpack://@zerosonesfun/composer-preview/webpack/runtime/define property getters","webpack://@zerosonesfun/composer-preview/webpack/runtime/hasOwnProperty shorthand","webpack://@zerosonesfun/composer-preview/webpack/runtime/make namespace object","webpack://@zerosonesfun/composer-preview/external root \"flarum.core.compat['forum/app']\"","webpack://@zerosonesfun/composer-preview/external root \"flarum.core.compat['common/extend']\"","webpack://@zerosonesfun/composer-preview/external root \"flarum.core.compat['forum/states/ComposerState']\"","webpack://@zerosonesfun/composer-preview/external root \"flarum.core.compat['forum/components/ComposerBody']\"","webpack://@zerosonesfun/composer-preview/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@zerosonesfun/composer-preview/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ComposerBody'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","/*\r\n * This file is part of zerosonesfun/composer-preview.\r\n *\r\n * Copyright (c) 2021 Rafael Horvat.\r\n *\r\n * For the full copyright and license information, please view the LICENSE.md\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport ComposerState from 'flarum/forum/states/ComposerState';\r\nimport ComposerBody from 'flarum/forum/components/ComposerBody';\r\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\r\n\r\napp.initializers.add('zerosonesfun-composer-preview', () => {\r\n\t// For the `DiscussionComposer` add a property to the `ComposerState` used to\r\n\t// check if the preview is being whown or not. The will be accessible globally by\r\n\t// accessing `app.composer.showPreview`.\r\n\textend(ComposerState.prototype, 'load', function (_, componentClass) {\r\n    this.showPreview = false;\r\n\t});\r\n\r\n\t// Add an empty element to the `ComposerBody.headerItems`. This will be filled with content\r\n\t// once the preview is shown.\r\n\textend(ComposerBody.prototype, 'headerItems', function (items) {\r\n\t\titems.add(\r\n\t\t\t'preview-discussion',\r\n\t\t\t<div\r\n\t\t\t\tclassName={`Composer-preview Post-body ${app.composer.showPreview ? '' : 'hidden'}`}\r\n\t\t\t></div>,\r\n\t\t\t50\r\n\t\t);\r\n\t});\r\n\r\n\t// Add a `jumpToPreview` method to the `DiscussionComposer`. Doing that implies\r\n\t// that the button for preview will be shown in the `controlItems` of the `TextEditor`.\r\n\t// This method will be the callback called when this button is clicked.\r\n\tDiscussionComposer.prototype.jumpToPreview = function (e) {\r\n\t\t// Prevent fof/upload to trigger the preview:\r\n\t\tif (!(e instanceof MouseEvent)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update the state\r\n\t\tthis.composer.showPreview = !this.composer.showPreview;\r\n\r\n\t\t// If we need to show the preview...\r\n\t\tif (this.composer.showPreview) {\r\n\t\t\t// ... Set the content of the dedicated element using the `s9e.TextFormatter`\r\n\t\t\ts9e.TextFormatter.preview(\r\n\t\t\t\tthis.composer.fields.content(),\r\n\t\t\t\tthis.$('.Composer-preview')[0]\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t// To make that the preview container has the right size and position (including when the composer\r\n\t// is resized) we need to continually update it.\r\n\textend(ComposerBody.prototype, 'oncreate', function () {\r\n\t\tthis.composerPreviewInterval = setInterval(function () {\r\n\t\t\tif (app.composer.showPreview) {\r\n\t\t\t\tconst $textarea = this.$('.TextEditor textarea');\r\n\t\t\t\tif ($textarea.offset()) {\r\n\t\t\t\t\tthis.$('.Composer-preview').css({\r\n\t\t\t\t\t\twidth: $textarea.width(),\r\n\t\t\t\t\t\theight: $textarea.height() + 10,\r\n\t\t\t\t\t\ttop: $textarea.offset().top - $('.Composer').offset().top,\r\n\t\t\t\t\t\tleft: $textarea.offset().left - $('.Composer').offset().left,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, 100);\r\n\t});\r\n\r\n  extend(ComposerBody.prototype, 'onremove', function () {\r\n    clearInterval(this.composerPreviewInterval)\r\n  })\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","ComposerState","_","componentClass","this","showPreview","ComposerBody","items","add","m","className","DiscussionComposer","e","MouseEvent","composer","s9e","TextFormatter","preview","fields","content","$","composerPreviewInterval","setInterval","$textarea","offset","css","width","height","top","left","clearInterval"],"sourceRoot":""}