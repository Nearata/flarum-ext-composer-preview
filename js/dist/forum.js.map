{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uC,aCMxDC,IAAAA,aAAiBC,IAAI,2BAA4B,YAIhDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAyB,OAAQ,SAAUC,EAAGC,GACpDC,KAAKC,aAAc,CACpB,IAIAL,EAAAA,EAAAA,QAAOM,IAAAA,UAAwB,cAAe,SAAUC,GAAO,IAAAC,EAIjC,OAA7BA,EAAIV,IAAAA,QAAYT,IAAI,YAAhBmB,EAA2BC,YAI/BF,EAAMR,IACL,qBACAW,EAAA,OACCC,UAAS,+BAAgCb,IAAAA,SAAaO,YAAc,GAAK,YAE1E,GAEF,GAKAO,IAAAA,UAA6BC,cAAgB,SAAUC,GAEhDA,aAAaC,aAKnBX,KAAKY,SAASX,aAAeD,KAAKY,SAASX,YAGvCD,KAAKY,SAASX,aAEjBY,IAAIC,cAAcC,QACjBf,KAAKY,SAASI,OAAOC,UACrBjB,KAAKkB,EAAE,qBAAqB,IAG/B,GAIAtB,EAAAA,EAAAA,QAAOM,IAAAA,UAAwB,WAAY,WAC1CF,KAAKmB,wBAA0BC,YAAY,WAC1C,GAAI1B,IAAAA,SAAaO,YAAa,CAC7B,IAAMoB,EAAYrB,KAAKkB,EAAE,wBACrBG,EAAUC,UACbtB,KAAKkB,EAAE,qBAAqBK,IAAI,CAC/BC,MAAOH,EAAUG,QACjBC,OAAQJ,EAAUI,SAAW,GAC7BC,IAAKL,EAAUC,SAASI,IAAMR,EAAE,aAAaI,SAASI,IACtDC,KAAMN,EAAUC,SAASK,KAAOT,EAAE,aAAaI,SAASK,MAG3D,CACD,EAAG,IACJ,IAEA/B,EAAAA,EAAAA,QAAOM,IAAAA,UAAwB,WAAY,WAC1C0B,cAAc5B,KAAKmB,wBACpB,EACD,E","sources":["webpack://@nearata/flarum-ext-composer-preview/webpack/bootstrap","webpack://@nearata/flarum-ext-composer-preview/webpack/runtime/compat get default export","webpack://@nearata/flarum-ext-composer-preview/webpack/runtime/define property getters","webpack://@nearata/flarum-ext-composer-preview/webpack/runtime/hasOwnProperty shorthand","webpack://@nearata/flarum-ext-composer-preview/external root \"flarum.core.compat['forum/app']\"","webpack://@nearata/flarum-ext-composer-preview/external root \"flarum.core.compat['common/extend']\"","webpack://@nearata/flarum-ext-composer-preview/external root \"flarum.core.compat['forum/states/ComposerState']\"","webpack://@nearata/flarum-ext-composer-preview/external root \"flarum.core.compat['forum/components/ComposerBody']\"","webpack://@nearata/flarum-ext-composer-preview/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@nearata/flarum-ext-composer-preview/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ComposerBody'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","import app from \"flarum/forum/app\";\nimport { extend } from \"flarum/common/extend\";\nimport ComposerState from \"flarum/forum/states/ComposerState\";\nimport ComposerBody from \"flarum/forum/components/ComposerBody\";\nimport DiscussionComposer from \"flarum/forum/components/DiscussionComposer\";\n\napp.initializers.add(\"nearata-composer-preview\", () => {\n\t// For the `DiscussionComposer` add a property to the `ComposerState` used to\n\t// check if the preview is being whown or not. The will be accessible globally by\n\t// accessing `app.composer.showPreview`.\n\textend(ComposerState.prototype, \"load\", function (_, componentClass) {\n\t\tthis.showPreview = false;\n\t});\n\n\t// Add an empty element to the `ComposerBody.headerItems`. This will be filled with content\n\t// once the preview is shown.\n\textend(ComposerBody.prototype, \"headerItems\", function (items) {\n\t\t/**\n\t\t * @fix https://discuss.flarum.org/d/29761-composer-preview/48\n\t\t */\n\t\tif (app.current.get(\"stream\")?.discussion) {\n\t\t\treturn;\n\t\t}\n\n\t\titems.add(\n\t\t\t\"preview-discussion\",\n\t\t\t<div\n\t\t\t\tclassName={`Composer-preview Post-body ${app.composer.showPreview ? \"\" : \"hidden\"}`}\n\t\t\t></div>,\n\t\t\t50,\n\t\t);\n\t});\n\n\t// Add a `jumpToPreview` method to the `DiscussionComposer`. Doing that implies\n\t// that the button for preview will be shown in the `controlItems` of the `TextEditor`.\n\t// This method will be the callback called when this button is clicked.\n\tDiscussionComposer.prototype.jumpToPreview = function (e) {\n\t\t// Prevent fof/upload to trigger the preview:\n\t\tif (!(e instanceof MouseEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the state\n\t\tthis.composer.showPreview = !this.composer.showPreview;\n\n\t\t// If we need to show the preview...\n\t\tif (this.composer.showPreview) {\n\t\t\t// ... Set the content of the dedicated element using the `s9e.TextFormatter`\n\t\t\ts9e.TextFormatter.preview(\n\t\t\t\tthis.composer.fields.content(),\n\t\t\t\tthis.$(\".Composer-preview\")[0],\n\t\t\t);\n\t\t}\n\t};\n\n\t// To make that the preview container has the right size and position (including when the composer\n\t// is resized) we need to continually update it.\n\textend(ComposerBody.prototype, \"oncreate\", function () {\n\t\tthis.composerPreviewInterval = setInterval(function () {\n\t\t\tif (app.composer.showPreview) {\n\t\t\t\tconst $textarea = this.$(\".TextEditor textarea\");\n\t\t\t\tif ($textarea.offset()) {\n\t\t\t\t\tthis.$(\".Composer-preview\").css({\n\t\t\t\t\t\twidth: $textarea.width(),\n\t\t\t\t\t\theight: $textarea.height() + 10,\n\t\t\t\t\t\ttop: $textarea.offset().top - $(\".Composer\").offset().top,\n\t\t\t\t\t\tleft: $textarea.offset().left - $(\".Composer\").offset().left,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}, 100);\n\t});\n\n\textend(ComposerBody.prototype, \"onremove\", function () {\n\t\tclearInterval(this.composerPreviewInterval);\n\t});\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","extend","ComposerState","_","componentClass","this","showPreview","ComposerBody","items","_app$current$get","discussion","m","className","DiscussionComposer","jumpToPreview","e","MouseEvent","composer","s9e","TextFormatter","preview","fields","content","$","composerPreviewInterval","setInterval","$textarea","offset","css","width","height","top","left","clearInterval"],"sourceRoot":""}